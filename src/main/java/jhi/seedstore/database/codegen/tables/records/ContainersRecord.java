/*
 * This file is generated by jOOQ.
 */
package jhi.seedstore.database.codegen.tables.records;


import java.sql.Timestamp;

import jhi.seedstore.database.codegen.tables.Containers;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContainersRecord extends UpdatableRecordImpl<ContainersRecord> implements Record10<Integer, String, String, Integer, Integer, Boolean, Integer, Integer, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>seedstore_db.containers.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>seedstore_db.containers.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>seedstore_db.containers.barcode</code>.
     */
    public void setBarcode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>seedstore_db.containers.barcode</code>.
     */
    public String getBarcode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>seedstore_db.containers.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>seedstore_db.containers.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>seedstore_db.containers.container_type_id</code>.
     */
    public void setContainerTypeId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>seedstore_db.containers.container_type_id</code>.
     */
    public Integer getContainerTypeId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>seedstore_db.containers.parent_container_id</code>.
     */
    public void setParentContainerId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>seedstore_db.containers.parent_container_id</code>.
     */
    public Integer getParentContainerId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>seedstore_db.containers.is_active</code>.
     */
    public void setIsActive(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>seedstore_db.containers.is_active</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>seedstore_db.containers.trial_id</code>.
     */
    public void setTrialId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>seedstore_db.containers.trial_id</code>.
     */
    public Integer getTrialId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>seedstore_db.containers.project_id</code>.
     */
    public void setProjectId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>seedstore_db.containers.project_id</code>.
     */
    public Integer getProjectId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>seedstore_db.containers.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>seedstore_db.containers.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>seedstore_db.containers.updated_on</code>.
     */
    public void setUpdatedOn(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>seedstore_db.containers.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, Integer, Integer, Boolean, Integer, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, String, Integer, Integer, Boolean, Integer, Integer, Timestamp, Timestamp> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Containers.CONTAINERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Containers.CONTAINERS.BARCODE;
    }

    @Override
    public Field<String> field3() {
        return Containers.CONTAINERS.DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return Containers.CONTAINERS.CONTAINER_TYPE_ID;
    }

    @Override
    public Field<Integer> field5() {
        return Containers.CONTAINERS.PARENT_CONTAINER_ID;
    }

    @Override
    public Field<Boolean> field6() {
        return Containers.CONTAINERS.IS_ACTIVE;
    }

    @Override
    public Field<Integer> field7() {
        return Containers.CONTAINERS.TRIAL_ID;
    }

    @Override
    public Field<Integer> field8() {
        return Containers.CONTAINERS.PROJECT_ID;
    }

    @Override
    public Field<Timestamp> field9() {
        return Containers.CONTAINERS.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field10() {
        return Containers.CONTAINERS.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getBarcode();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer component4() {
        return getContainerTypeId();
    }

    @Override
    public Integer component5() {
        return getParentContainerId();
    }

    @Override
    public Boolean component6() {
        return getIsActive();
    }

    @Override
    public Integer component7() {
        return getTrialId();
    }

    @Override
    public Integer component8() {
        return getProjectId();
    }

    @Override
    public Timestamp component9() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component10() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getBarcode();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Integer value4() {
        return getContainerTypeId();
    }

    @Override
    public Integer value5() {
        return getParentContainerId();
    }

    @Override
    public Boolean value6() {
        return getIsActive();
    }

    @Override
    public Integer value7() {
        return getTrialId();
    }

    @Override
    public Integer value8() {
        return getProjectId();
    }

    @Override
    public Timestamp value9() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value10() {
        return getUpdatedOn();
    }

    @Override
    public ContainersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ContainersRecord value2(String value) {
        setBarcode(value);
        return this;
    }

    @Override
    public ContainersRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ContainersRecord value4(Integer value) {
        setContainerTypeId(value);
        return this;
    }

    @Override
    public ContainersRecord value5(Integer value) {
        setParentContainerId(value);
        return this;
    }

    @Override
    public ContainersRecord value6(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public ContainersRecord value7(Integer value) {
        setTrialId(value);
        return this;
    }

    @Override
    public ContainersRecord value8(Integer value) {
        setProjectId(value);
        return this;
    }

    @Override
    public ContainersRecord value9(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ContainersRecord value10(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public ContainersRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5, Boolean value6, Integer value7, Integer value8, Timestamp value9, Timestamp value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContainersRecord
     */
    public ContainersRecord() {
        super(Containers.CONTAINERS);
    }

    /**
     * Create a detached, initialised ContainersRecord
     */
    public ContainersRecord(Integer id, String barcode, String description, Integer containerTypeId, Integer parentContainerId, Boolean isActive, Integer trialId, Integer projectId, Timestamp createdOn, Timestamp updatedOn) {
        super(Containers.CONTAINERS);

        setId(id);
        setBarcode(barcode);
        setDescription(description);
        setContainerTypeId(containerTypeId);
        setParentContainerId(parentContainerId);
        setIsActive(isActive);
        setTrialId(trialId);
        setProjectId(projectId);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised ContainersRecord
     */
    public ContainersRecord(jhi.seedstore.database.codegen.tables.pojos.Containers value) {
        super(Containers.CONTAINERS);

        if (value != null) {
            setId(value.getId());
            setBarcode(value.getBarcode());
            setDescription(value.getDescription());
            setContainerTypeId(value.getContainerTypeId());
            setParentContainerId(value.getParentContainerId());
            setIsActive(value.getIsActive());
            setTrialId(value.getTrialId());
            setProjectId(value.getProjectId());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
