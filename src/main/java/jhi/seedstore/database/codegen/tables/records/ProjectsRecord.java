/*
 * This file is generated by jOOQ.
 */
package jhi.seedstore.database.codegen.tables.records;


import java.sql.Date;
import java.sql.Timestamp;

import jhi.seedstore.database.codegen.tables.Projects;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectsRecord extends UpdatableRecordImpl<ProjectsRecord> implements Record8<Integer, String, String, Integer, Date, Date, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>seedstore_db.projects.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>seedstore_db.projects.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>seedstore_db.projects.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>seedstore_db.projects.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>seedstore_db.projects.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>seedstore_db.projects.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>seedstore_db.projects.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>seedstore_db.projects.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>seedstore_db.projects.start_date</code>.
     */
    public void setStartDate(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>seedstore_db.projects.start_date</code>.
     */
    public Date getStartDate() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>seedstore_db.projects.end_date</code>.
     */
    public void setEndDate(Date value) {
        set(5, value);
    }

    /**
     * Getter for <code>seedstore_db.projects.end_date</code>.
     */
    public Date getEndDate() {
        return (Date) get(5);
    }

    /**
     * Setter for <code>seedstore_db.projects.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>seedstore_db.projects.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>seedstore_db.projects.updated_on</code>.
     */
    public void setUpdatedOn(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>seedstore_db.projects.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, Integer, Date, Date, Timestamp, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, Integer, Date, Date, Timestamp, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Projects.PROJECTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Projects.PROJECTS.NAME;
    }

    @Override
    public Field<String> field3() {
        return Projects.PROJECTS.DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return Projects.PROJECTS.USER_ID;
    }

    @Override
    public Field<Date> field5() {
        return Projects.PROJECTS.START_DATE;
    }

    @Override
    public Field<Date> field6() {
        return Projects.PROJECTS.END_DATE;
    }

    @Override
    public Field<Timestamp> field7() {
        return Projects.PROJECTS.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field8() {
        return Projects.PROJECTS.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer component4() {
        return getUserId();
    }

    @Override
    public Date component5() {
        return getStartDate();
    }

    @Override
    public Date component6() {
        return getEndDate();
    }

    @Override
    public Timestamp component7() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component8() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Integer value4() {
        return getUserId();
    }

    @Override
    public Date value5() {
        return getStartDate();
    }

    @Override
    public Date value6() {
        return getEndDate();
    }

    @Override
    public Timestamp value7() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value8() {
        return getUpdatedOn();
    }

    @Override
    public ProjectsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProjectsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProjectsRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ProjectsRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public ProjectsRecord value5(Date value) {
        setStartDate(value);
        return this;
    }

    @Override
    public ProjectsRecord value6(Date value) {
        setEndDate(value);
        return this;
    }

    @Override
    public ProjectsRecord value7(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ProjectsRecord value8(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public ProjectsRecord values(Integer value1, String value2, String value3, Integer value4, Date value5, Date value6, Timestamp value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectsRecord
     */
    public ProjectsRecord() {
        super(Projects.PROJECTS);
    }

    /**
     * Create a detached, initialised ProjectsRecord
     */
    public ProjectsRecord(Integer id, String name, String description, Integer userId, Date startDate, Date endDate, Timestamp createdOn, Timestamp updatedOn) {
        super(Projects.PROJECTS);

        setId(id);
        setName(name);
        setDescription(description);
        setUserId(userId);
        setStartDate(startDate);
        setEndDate(endDate);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised ProjectsRecord
     */
    public ProjectsRecord(jhi.seedstore.database.codegen.tables.pojos.Projects value) {
        super(Projects.PROJECTS);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setDescription(value.getDescription());
            setUserId(value.getUserId());
            setStartDate(value.getStartDate());
            setEndDate(value.getEndDate());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
