/*
 * This file is generated by jOOQ.
 */
package jhi.seedstore.database.codegen.tables.pojos;


import lombok.*;
import lombok.experimental.Accessors;

import java.io.Serializable;
import java.util.Map;

// @formatter:off
/**
 * VIEW
 */
@Getter
@Setter
@Accessors(chain = true)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableContainers implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer            containerId;
    private String             containerBarcode;
    private String             containerDescription;
    private Integer            containerTypeId;
    private String             containerTypeName;
    private String             containerTypeDescription;
    private Integer            parentId;
    private String             parentBarcode;
    private String             parentDescription;
    private Boolean            containerIsActive;
    private Integer            trialId;
    private String             trialName;
    private String             trialDescription;
    private Integer            projectId;
    private String             projectName;
    private String             projectDescription;
    private Map<String,String> containerAttributes;
    private Long               subContainerCount;

    public ViewTableContainers() {}

    public ViewTableContainers(ViewTableContainers value) {
        this.containerId = value.containerId;
        this.containerBarcode = value.containerBarcode;
        this.containerDescription = value.containerDescription;
        this.containerTypeId = value.containerTypeId;
        this.containerTypeName = value.containerTypeName;
        this.containerTypeDescription = value.containerTypeDescription;
        this.parentId = value.parentId;
        this.parentBarcode = value.parentBarcode;
        this.parentDescription = value.parentDescription;
        this.containerIsActive = value.containerIsActive;
        this.trialId = value.trialId;
        this.trialName = value.trialName;
        this.trialDescription = value.trialDescription;
        this.projectId = value.projectId;
        this.projectName = value.projectName;
        this.projectDescription = value.projectDescription;
        this.containerAttributes = value.containerAttributes;
        this.subContainerCount = value.subContainerCount;
    }

    public ViewTableContainers(
        Integer            containerId,
        String             containerBarcode,
        String             containerDescription,
        Integer            containerTypeId,
        String             containerTypeName,
        String             containerTypeDescription,
        Integer            parentId,
        String             parentBarcode,
        String             parentDescription,
        Boolean            containerIsActive,
        Integer            trialId,
        String             trialName,
        String             trialDescription,
        Integer            projectId,
        String             projectName,
        String             projectDescription,
        Map<String,String> containerAttributes,
        Long               subContainerCount
    ) {
        this.containerId = containerId;
        this.containerBarcode = containerBarcode;
        this.containerDescription = containerDescription;
        this.containerTypeId = containerTypeId;
        this.containerTypeName = containerTypeName;
        this.containerTypeDescription = containerTypeDescription;
        this.parentId = parentId;
        this.parentBarcode = parentBarcode;
        this.parentDescription = parentDescription;
        this.containerIsActive = containerIsActive;
        this.trialId = trialId;
        this.trialName = trialName;
        this.trialDescription = trialDescription;
        this.projectId = projectId;
        this.projectName = projectName;
        this.projectDescription = projectDescription;
        this.containerAttributes = containerAttributes;
        this.subContainerCount = subContainerCount;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewTableContainers (");

        sb.append(containerId);
        sb.append(", ").append(containerBarcode);
        sb.append(", ").append(containerDescription);
        sb.append(", ").append(containerTypeId);
        sb.append(", ").append(containerTypeName);
        sb.append(", ").append(containerTypeDescription);
        sb.append(", ").append(parentId);
        sb.append(", ").append(parentBarcode);
        sb.append(", ").append(parentDescription);
        sb.append(", ").append(containerIsActive);
        sb.append(", ").append(trialId);
        sb.append(", ").append(trialName);
        sb.append(", ").append(trialDescription);
        sb.append(", ").append(projectId);
        sb.append(", ").append(projectName);
        sb.append(", ").append(projectDescription);
        sb.append(", ").append(containerAttributes);
        sb.append(", ").append(subContainerCount);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
