/*
 * This file is generated by jOOQ.
 */
package jhi.seedstore.database.codegen.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Arrays;

import jhi.seedstore.pojo.ContainerAttributeValue;


import lombok.*;
import lombok.experimental.Accessors;

// @formatter:off
/**
 * VIEW
 */
@Getter
@Setter
@Accessors(chain = true)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableContainers implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer                   containerId;
    private String                    containerBarcode;
    private String                    containerDescription;
    private Integer                   containerTypeId;
    private String                    containerTypeName;
    private String                    containerTypeDescription;
    private String                    containerTypeIcon;
    private Integer                   parentId;
    private String                    parentBarcode;
    private String                    parentDescription;
    private Integer                   parentContainerTypeId;
    private String                    parentContainerTypeName;
    private String                    parentContainerTypeDescription;
    private String                    parentContainerTypeIcon;
    private Boolean                   containerIsActive;
    private Integer                   trialId;
    private String                    trialName;
    private String                    trialDescription;
    private Integer                   projectId;
    private String                    projectName;
    private String                    projectDescription;
    private ContainerAttributeValue[] containerAttributes;
    private Long                      subContainerCount;
    private Timestamp                 createdOn;

    public ViewTableContainers() {}

    public ViewTableContainers(ViewTableContainers value) {
        this.containerId = value.containerId;
        this.containerBarcode = value.containerBarcode;
        this.containerDescription = value.containerDescription;
        this.containerTypeId = value.containerTypeId;
        this.containerTypeName = value.containerTypeName;
        this.containerTypeDescription = value.containerTypeDescription;
        this.containerTypeIcon = value.containerTypeIcon;
        this.parentId = value.parentId;
        this.parentBarcode = value.parentBarcode;
        this.parentDescription = value.parentDescription;
        this.parentContainerTypeId = value.parentContainerTypeId;
        this.parentContainerTypeName = value.parentContainerTypeName;
        this.parentContainerTypeDescription = value.parentContainerTypeDescription;
        this.parentContainerTypeIcon = value.parentContainerTypeIcon;
        this.containerIsActive = value.containerIsActive;
        this.trialId = value.trialId;
        this.trialName = value.trialName;
        this.trialDescription = value.trialDescription;
        this.projectId = value.projectId;
        this.projectName = value.projectName;
        this.projectDescription = value.projectDescription;
        this.containerAttributes = value.containerAttributes;
        this.subContainerCount = value.subContainerCount;
        this.createdOn = value.createdOn;
    }

    public ViewTableContainers(
        Integer                   containerId,
        String                    containerBarcode,
        String                    containerDescription,
        Integer                   containerTypeId,
        String                    containerTypeName,
        String                    containerTypeDescription,
        String                    containerTypeIcon,
        Integer                   parentId,
        String                    parentBarcode,
        String                    parentDescription,
        Integer                   parentContainerTypeId,
        String                    parentContainerTypeName,
        String                    parentContainerTypeDescription,
        String                    parentContainerTypeIcon,
        Boolean                   containerIsActive,
        Integer                   trialId,
        String                    trialName,
        String                    trialDescription,
        Integer                   projectId,
        String                    projectName,
        String                    projectDescription,
        ContainerAttributeValue[] containerAttributes,
        Long                      subContainerCount,
        Timestamp                 createdOn
    ) {
        this.containerId = containerId;
        this.containerBarcode = containerBarcode;
        this.containerDescription = containerDescription;
        this.containerTypeId = containerTypeId;
        this.containerTypeName = containerTypeName;
        this.containerTypeDescription = containerTypeDescription;
        this.containerTypeIcon = containerTypeIcon;
        this.parentId = parentId;
        this.parentBarcode = parentBarcode;
        this.parentDescription = parentDescription;
        this.parentContainerTypeId = parentContainerTypeId;
        this.parentContainerTypeName = parentContainerTypeName;
        this.parentContainerTypeDescription = parentContainerTypeDescription;
        this.parentContainerTypeIcon = parentContainerTypeIcon;
        this.containerIsActive = containerIsActive;
        this.trialId = trialId;
        this.trialName = trialName;
        this.trialDescription = trialDescription;
        this.projectId = projectId;
        this.projectName = projectName;
        this.projectDescription = projectDescription;
        this.containerAttributes = containerAttributes;
        this.subContainerCount = subContainerCount;
        this.createdOn = createdOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewTableContainers (");

        sb.append(containerId);
        sb.append(", ").append(containerBarcode);
        sb.append(", ").append(containerDescription);
        sb.append(", ").append(containerTypeId);
        sb.append(", ").append(containerTypeName);
        sb.append(", ").append(containerTypeDescription);
        sb.append(", ").append(containerTypeIcon);
        sb.append(", ").append(parentId);
        sb.append(", ").append(parentBarcode);
        sb.append(", ").append(parentDescription);
        sb.append(", ").append(parentContainerTypeId);
        sb.append(", ").append(parentContainerTypeName);
        sb.append(", ").append(parentContainerTypeDescription);
        sb.append(", ").append(parentContainerTypeIcon);
        sb.append(", ").append(containerIsActive);
        sb.append(", ").append(trialId);
        sb.append(", ").append(trialName);
        sb.append(", ").append(trialDescription);
        sb.append(", ").append(projectId);
        sb.append(", ").append(projectName);
        sb.append(", ").append(projectDescription);
        sb.append(", ").append(Arrays.toString(containerAttributes));
        sb.append(", ").append(subContainerCount);
        sb.append(", ").append(createdOn);

        sb.append(")");
        return sb.toString();
    }
    // @formatter:on
}
